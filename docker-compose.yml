services:
  mysql:
    image: mariadb:10.5
    environment:
    - MYSQL_DATABASE=data-keeper
    - MYSQL_ROOT_PASSWORD=data-keeper
    ports:
#    - 33060:33060
    - 3306:3306
    volumes:
      - ./mysql:/docker-entrypoint-initdb.d
      - ./mysql_data:/var/lib/mysql
    restart: always
    networks:
      - app-network

  app:
    build: .
    environment:
#      - MYSQL_HOST=mysql
      - JDBC_DATABASE_USERNAME=root
      - JDBC_DATABASE_PASSWORD=data-keeper
      - MYSQL_DATABASE=data-keeper
      - TZ=Europe/Moscow
    ports:
      - "3000:3000"  # или любой другой порт, который использует ваше приложение
    depends_on:
      - mysql  # гарантирует, что сначала будет запущен сервис mysql
    networks:
      - app-network
    restart: always

  web: # Имя сервиса
    build:
      context: ../web  # Указывает, что Dockerfile находится в текущей директории
      dockerfile: Dockerfile  # Имя Dockerfile (опционально, если имя - Dockerfile)
    ports:
      - "8080:8080"  # Пробрасывает порт 8080 контейнера на 8080 хоста
#    volumes:
#      - .:/web  # Связывает локальную директорию с контейнером для разработки
#      - /web/node_modules  # Исключает node_modules из монтирования (опционально)
    environment:
      NODE_ENV: production  # Устанавливает переменные окружения
    command: [ "npm", "run", "serve" ]  # Переопределяет команду запуска (можно не указывать, если в Dockerfile уже есть CMD)
    networks:
      - app-network

networks:
  app-network:
    driver: bridge